Word count: 989
History
of
Java
programming
language
freejavaguidecom
is
an
objectoriented
developed
by
James
Gosling
and
colleagues
at
Sun
Microsystems
in
the
early
1990s
Unlike
conventional
languages
which
are
generally
designed
either
to
be
compiled
native
machine
code
or
interpreted
from
source
runtime
intended
a
bytecode
then
run
using
JIT
compilation
Virtual
Machine
The
itself
borrows
much
syntax
C
but
has
simpler
object
model
fewer
lowlevel
facilities
only
distantly
related
JavaScript
though
they
have
similar
names
share
Clike
was
started
as
project
called
Oak
June
1991
Goslings
goals
were
implement
virtual
that
had
familiar
notation
with
greater
uniformity
simplicity
than
CC
first
public
implementation
10
1995
It
made
promise
Write
Once
Run
Anywhere
free
runtimes
on
popular
platforms
fairly
secure
its
security
configurable
allowing
for
network
file
access
limited
major
web
browsers
soon
incorporated
it
into
their
standard
configurations
applet
configuration
quickly
New
versions
large
small
J2EE
J2ME
advent
2
not
announced
any
plans
3
In
1997
approached
ISOIEC
JTC1
standards
body
later
Ecma
International
formalize
withdrew
process
remains
proprietary
de
facto
controlled
through
Community
Process
makes
most
implementations
available
without
charge
revenue
being
generated
specialized
products
such
Enterprise
System
distinguishes
between
Software
Development
Kit
SDK
Runtime
Environment
JRE
subset
primary
distinction
compiler
present
Philosophy
There
five
creation
1
should
use
methodology
allow
same
program
executed
multiple
operating
systems
contain
builtin
support
computer
networks
4
execute
remote
sources
securely
5
easy
selecting
what
considered
good
parts
other
To
achieve
networking
execution
programmers
sometimes
find
necessary
extensions
CORBA
Internet
Communications
Engine
OSGi
Object
orientation
characteristic
OO
refers
method
design
Although
there
many
interpretations
one
distinguishing
idea
software
so
various
types
data
manipulates
combined
together
relevant
operations
Thus
entities
objects
An
can
thought
selfcontained
bundle
behavior
state
principle
separate
things
change
stay
often
some
structure
requires
corresponding
operates
vice
versa
This
separation
coherent
provides
more
stable
foundation
intent
make
projects
easier
manage
thus
improving
quality
reducing
number
failed
Another
goal
develop
generic
become
reusable
A
customer
example
roughly
basic
set
behaviors
different
especially
when
these
overlap
fundamental
level
do
organizations
this
sense
hopefully
seen
pluggable
components
helping
industry
build
largely
existing
welltested
pieces
leading
massive
reduction
development
times
reusability
met
mixed
practical
results
two
main
difficulties
truly
poorly
understood
broad
communication
reuse
opportunities
lacking
Some
open
communities
want
help
ease
problem
providing
authors
ways
disseminate
information
about
libraries
Platform
independence
second
platform
means
programs
written
must
similarly
diverse
hardware
One
able
write
once
anywhere
achieved
compilers
compiling
halfway
specifically
bytecodesimplified
instructions
specific
VM
host
interprets
executes
Further
standardized
provided
features
machines
graphics
threading
unified
Note
although
theres
explicit
stage
point
converted
also
compile
GCJ
removing
intermediate
output
single
architecture
Suns
license
insists
all
compatible
resulted
legal
dispute
Microsoft
after
claimed
did
RMI
JNI
interfaces
added
platformspecific
own
response
no
longer
ships
Windows
recent
Explorer
cannot
applets
thirdparty
plugin
However
others
cost
those
used
portability
These
produced
ran
slowly
executables
instance
suffered
reputation
poor
performance
More
JVM
produce
significantly
faster
before
techniques
technique
simply
directly
like
traditional
skipping
bytecodes
entirely
achieves
expense
known
justintime
translates
time
incurs
overhead
during
sophisticated
VMs
dynamic
recompilation
analyze
running
selectively
recompile
optimize
critical
Dynamic
optimizations
superior
static
because
base
knowledge
environment
loaded
classes
take
advantage
speed
losing
Portability
technically
difficult
Javas
success
been
indeed
possible
behave
consistently
across
errors
inconsistencies
led
parody
slogan
debug
everywhere
Platformindependent
however
very
successful
serverside
applications
Web
services
servlets
JavaBeans
well
Embedded
based
environments
Automatic
garbage
collection
behind
automatic
memory
management
spared
burden
having
perform
manual
programmer
allocates
create
stored
heap
responsible
manually
deallocating
delete
If
forgets
deallocate
writes
fails
timely
fashion
leak
occur
will
consume
potentially
arbitrarily
amount
addition
if
region
deallocated
twice
unstable
may
crash
Finally
non
collected
certain
degree
complexity
usercode
track
finalize
allocations
potential
avoided
determines
created
managing
lifecycle
reference
holding
view
address
When
references
remain
collector
automatically
deletes
unreachable
freeing
preventing
Memory
leaks
still
holds
neededin
words
higher
conceptual
levels
affect
paradigms
developer
assumes
allocationrecollection
low
choose
freely
construct
instead
preinitializing
reusing
them
With
penalties
innerloop
construction
largecomplex
facilitates
threadisolation
need
synchronize
threads
work
instances
datahiding
transient
immutable
valueobjects
minimizes
sideeffect
Comparing
functionality
improve
lower
fragmentation
considerably
extra
application
virtually
invisible
That
developers
notion
place
necessarily
correlate
actions
explicitly
performed
Depending
beneficial
disadvantageous
freed
performing
tasks
loses
option
writing
Syntax
derived
unlike
combines
structured
built
ground
up
fully
everything
exceptions
atomic
datatypes
ordinal
real
numbers
boolean
values
characters
inside
class
Applet
embedded
typically
page
displayed
browser
Hellojava
import
javaappletApplet
javaawtGraphics
Hello
extends
void
paintGraphics
gc
gcdrawStringHello
world
65
95
draw
string
rectangle
within
slightly
better
overrides
paint
uses
statements
Hellohtml
html
head
titleHello
World
Applettitle
codeHello
width200
height200
placed
HTML
document
element
tag
three
attributes
specifies
name
sets
pixel
width
height
Applets
embed
elements
inconsistent
Servlet
EE
generate
responses
requests
clients
javaio
javaxservlet
GenericServlet
serviceServletRequest
request
ServletResponse
throws
ServletException
IOException
responsesetContentTypetexthtml
PrintWriter
pw
responsegetWriter
pwprintlnHello
pwclose
direct
include
packages
interface
server
forward
servlet
control
defined
provide
service
handler
passed
ServletRequest
contains
client
returned
declares
prevents
responding
setContentTypeString
MIME
content
type
texthtml
getWriter
returns
sent
printlnString
close
print
writer
causes
stream
Swing
advanced
graphical
user
library
SE
javaxswing
JFrame
setDefaultCloseOperationWindowConstantsDISPOSEONCLOSE
addnew
JLabelHello
pack
mainString
args
new
HellosetVisibletrue
statement
directs
package
implements
window
title
bar
constructor
initializes
frame
calling
setDefaultCloseOperationint
inherited
default
operation
selected
WindowConstantsDISPOSEONCLOSEthis
disposed
closed
opposed
merely
hidden
allows
exit
terminate
Next
JLabel
addComponent
Container
superclass
add
label
Window
size
layout
contents
starts
instantiates
setVisibleboolean
Component
parameter
true
exiting
does
cause
AWT
event
dispatching
thread
active
until
toplevel
windows
Look
feel
look
GUI
toolkit
specify
system
Clones
GTK
Motif
supplied
Apple
Aqua
Mac
OS
X
Though
prior
feels
6
addresses
widget
drawing
routines
underlying
Alternatively
third
party
toolkits
wx4j
SWT
increased
integration
windowing
Lack
purity
primitive
Primitive
hold
stack
rather
conscious
decision
designers
reasons
Because
pure
50
autoboxing
enables
wrapper
interchange
improved
flexibility
decided
including
inheritance
operator
overloading
properties
tuples
required
deployed
Endusers
commonly
plugins
distributes
superset
JDK
includes
tools
Javadoc
debugger
Above
article
originally
wikipediaorg
under
GNU
Free
Documentation
License
Copyright
20062013
Guide
Tutorials
All
Rights
Reserved
